描述



约翰要去钓鱼。他有h小时的可用时间(1 <= h <= 16)，该区域有n个湖泊(2 <= n <= 25)，都可以沿着单行道到达。约翰从1号湖出发，但他可以在任何他想去的湖结束。他只能从一个湖走到另一个湖，但他不需要在任何湖停留，除非他愿意。对于每个i = 1，…，n - 1，从i湖到i + 1湖的5分钟间隔数记为ti (0 < ti <=192)。例如，t3 = 4表示从3湖到4湖需要20分钟的时间。为了帮助计划他的钓鱼之旅，约翰收集了一些关于湖泊的信息。对于每个湖i，已知在最初5分钟内预期捕获的鱼的数量，记为fi(fi >= 0)。每5分钟钓鱼减少鱼的数量预计将在接下来的5分钟间隔的恒定速率依赖注入(di > = 0)。如果鱼的数量预计将在一个时间间隔小于或等于di,不会有更多的鱼在湖在接下来的时间间隔。为了简化计划，约翰假设没有人会在湖里钓鱼，这样就会影响他预期能钓到的鱼的数量。

写一个程序来帮助约翰计划他的钓鱼之旅，以最大限度地增加预期被捕获的鱼的数量。在每个湖上停留的分钟数必须是5的倍数。

输入



您将在输入中得到一些情况。每个案例始于一行包含n。这是紧随其后的是一行包含h。接下来,有n个整数指定线fi (1 < = < = n),然后一行n个整数di (1 < = < = n),最后,一行n - 1整数ti(1 < =我< = n - 1)输入终止的一个案件中,n = 0。

输出



对于每个测试用例，打印花费在每个湖上的分钟数，用逗号分隔，以便计划达到预期捕获的鱼的最大数量(您应该在一行上打印整个计划，即使它超过80个字符)。后面的一行包含预期的fish数量。

如果存在多个计划，选择在1号湖上花费尽可能长时间的计划，即使在一定时间间隔内没有鱼被捕获。如果仍然是平局，选择在2号湖花费尽可能长的那个，以此类推。在大小写之间插入空白行。

样例输入

2 
1 
10 1 
2 5 
2 

4 
4 
10 15 20 17 
0 3 4 3 
1 2 3 

4 
4 
10 15 50 30 
0 3 4 3 
1 2 3 
0 

样例输出



45, 5 
Number of fish expected: 31 

240, 0, 0, 0 
Number of fish expected: 480 

115, 10, 50, 35 
Number of fish expected: 724 
Source